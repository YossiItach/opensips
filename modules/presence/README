
Presence Module

Anca-Maria Vamanu

   voice-system.ro

Edited by

Anca-Maria Vamanu

   Copyright © 2006 voice-system.ro
     _________________________________________________________

   Table of Contents
   1. User's Guide

        1.1. Overview
        1.2. To-do
        1.3. Dependencies

              1.3.1. OpenSER Modules
              1.3.2. External Libraries or Applications

        1.4. Exported Parameters

              1.4.1. db_url(str)
              1.4.2. presentity_table(str)
              1.4.3. active_watchers_table(str)
              1.4.4. watchers_table(str)
              1.4.5. clean_period (str)
              1.4.6. to_tag_pref (str)
              1.4.7. totag_avpid (int)
              1.4.8. lock_set_size (str)
              1.4.9. expires_offset (str)
              1.4.10. force_active (str)
              1.4.11. max_expires (str)

        1.5. Exported Functions

              1.5.1. handle_publish()
              1.5.2. handle_subscribe()

        1.6. Installation

   2. Developer's Guide
   3. Frequently Asked Questions

   List of Examples
   1-1. Set db_url parameter
   1-2. Set presentity_table parameter
   1-3. Set active_watchers_table parameter
   1-4. Set watchers_table parameter
   1-5. Set clean_period parameter
   1-6. Set to_tag_pref parameter
   1-7. Set totag_avpid parameter
   1-8. Set lock_set_size parameter
   1-9. Set expires_offset parameter
   1-10. Set force_active parameter
   1-11. Set max_expires parameter
   1-12. handle_publish usage
   1-13. handle_subscribe usage
   1-14. Create presentity database table
   1-15. Create active_watchers database table
   1-16. Create watchers database table
   1-17. Create xcap_xml database table
     _________________________________________________________

Chapter 1. User's Guide

1.1. Overview

   The modules implements a presence server. It handles PUBLISH
   and SUBSCRIBE messages and generates NOTIFY messages. It
   offers support for aggregation of published presence
   information for the same presentity using more devices. It can
   also filter the information provided to watchers according to
   privacy rules.

   The modules works with database storage. It stores published
   information and Subscribe -Notify dialog characteristics.
   There is also an extra table which stores xcap documents with
   permission rules.

   The server follows the specifications in: RFC3265, RFC3856,
   RFC3857, RFC3858.
     _________________________________________________________

1.2. To-do

   Provide support for clients which implement end-to-end
   presence.
     _________________________________________________________

1.3. Dependencies

1.3.1. OpenSER Modules

   The following modules must be loaded before this module:

     * a database module.
     * sl.
     * tm.
     _________________________________________________________

1.3.2. External Libraries or Applications

   The following libraries or applications must be installed
   before running OpenSER with this module loaded:

     * libxml.
     _________________________________________________________

1.4. Exported Parameters

1.4.1. db_url(str)

   The database url.

   Example 1-1. Set db_url parameter
...
modparam("presence", "db_url",
        "mysql://openser:openserrw@192.168.2.132/openser")
...
     _________________________________________________________

1.4.2. presentity_table(str)

   The name of the db table where Publish information are stored.

   Example 1-2. Set presentity_table parameter
...
modparam("presence", "presentity_table", "presentity");
...
     _________________________________________________________

1.4.3. active_watchers_table(str)

   The name of the db table where active subscription information
   are stored.

   Example 1-3. Set active_watchers_table parameter
...
modparam("presence", "active_watchers_table", "active_watchers")
...
     _________________________________________________________

1.4.4. watchers_table(str)

   The name of the db table where subscription states are stored.

   Example 1-4. Set watchers_table parameter
...
modparam("presence", "watchers_table", "watchers")
...
     _________________________________________________________

1.4.5. clean_period (str)

   The period at which to verify if there are expired messages
   stored in database.

   Example 1-5. Set clean_period parameter
...
modparam("presence", "clean_period", 100)
...
     _________________________________________________________

1.4.6. to_tag_pref (str)

   The prefix used when generating to_tag when sending replies
   for SUBSCRIBE requests.

   Example 1-6. Set to_tag_pref parameter
...
modparam("presence", "to_tag_pref", 'a')
...
     _________________________________________________________

1.4.7. totag_avpid (int)

   The id of the avp variable used for storing to_tag value. It
   must be the same as for sl module parameter.

   Example 1-7. Set totag_avpid parameter
...
modparam("presence", "totag_avpid", 987)
...
     _________________________________________________________

1.4.8. lock_set_size (str)

   The size of the lock used for synchronizing updating
   information from database.

   Example 1-8. Set lock_set_size parameter
...
modparam("presence", "lock_set_size", 8)
...
     _________________________________________________________

1.4.9. expires_offset (str)

   The value that should be subtracted from the expires value
   when sending a 200OK for a publish to force the client cu send
   an update before the old publish expires

   Example 1-9. Set expires_offset parameter
...
modparam("presence", "expires_offset", 10)
...
     _________________________________________________________

1.4.10. force_active (str)

   This parameter offers the possibility to set either the first
   Notify sent for a new subscribe should have the
   Subscriptions-State value 'pending' or 'active'. If it is
   different than 0, the Subscription-State value is 'active'.

   Example 1-10. Set force_active parameter
...
modparam("presence", "force_active", 1)
...
     _________________________________________________________

1.4.11. max_expires (str)

   The value at which to reduce the validity of PUBLISH/SUBSCRIBE
   if the Expires in request is greater.

   Example 1-11. Set max_expires parameter
...
modparam("presence", "max_expires", 3600)
...
     _________________________________________________________

1.5. Exported Functions

1.5.1. handle_publish()

   The function handles PUBLISH requests. It stores and updates
   presence information in database and calls functions to send
   NOTIFY messages when changes in presence information occur.

   This function can be used from REQUEST_ROUTE.

   Example 1-12. handle_publish usage
...
if(method=="PUBLISH")
    handle_publish();
...
     _________________________________________________________

1.5.2. handle_subscribe()

   The function which handles SUBSCRIBE requests. It stores or
   updates information in database and calls functions to send
   Notify messages when a Subscribe which initiate a dialog is
   received

   This function can be used from REQUEST_ROUTE.

   Example 1-13. handle_subscribe usage
...
if(method=="SUBSCRIBE")
    handle_subscribe();
...
     _________________________________________________________

1.6. Installation

   The module requires 4 table in OpenSER database. Next SQL
   statements shows the syntax to create them.

   Example 1-14. Create presentity database table
...
CREATE TABLE `presentity` (
  `username` varchar(64) NOT NULL,
  `domain` varchar(124) NOT NULL,
  `event` varchar(64) NOT NULL,
  `etag` varchar(64) NOT NULL,
  `expires` int(11) NOT NULL,
  `received_time` int(11) NOT NULL,
  `body` text NOT NULL,
  PRIMARY KEY  (`username`,`domain`,`event`,`etag`)
) ENGINE=MyISAM;
...

   Example 1-15. Create active_watchers database table
...
CREATE TABLE `active_watchers` (
  `to_user` varchar(64) NOT NULL,
  `to_domain` varchar(128) NOT NULL,
  `from_user` varchar(64) NOT NULL,
  `from_domain` varchar(128) NOT NULL,
  `event` varchar(64) NOT NULL default 'presence',
  `event_id` varchar(64) NOT NULL,
  `to_tag` varchar(128) NOT NULL,
  `from_tag` varchar(128) NOT NULL,
  `callid` varchar(128) NOT NULL,
  `cseq` int(11) NOT NULL,
  `contact` varchar(128) NOT NULL,
  `record_route` varchar(255) NOT NULL,
  `expires` int(11) NOT NULL,
  `status` varchar(32) NOT NULL default 'pending',
  `version` int(11) NOT NULL default '0',
  PRIMARY KEY  (`from_tag`)
) ENGINE=MyISAM;
...

   Example 1-16. Create watchers database table
...
CREATE TABLE `watchers` (
  `p_user` varchar(64) NOT NULL,
  `p_domain` varchar(128) NOT NULL,
  `w_user` varchar(64) NOT NULL,
  `w_domain` varchar(128) NOT NULL,
  `subs_status` varchar(64) NOT NULL,
  `reason` varchar(64) NOT NULL,
  `inserted_time` int(11) NOT NULL,
  PRIMARY KEY  (`p_user`,`p_domain`,`w_user`,`w_domain`)
) ENGINE=MyISAM;
...

   Example 1-17. Create xcap_xml database table
...
CREATE TABLE `xcap_xml` (
  `user` varchar(64) NOT NULL,
  `domain` varchar(128) NOT NULL,
  `xcap` text NOT NULL,
  `doc_type` int(11) NOT NULL,
  PRIMARY KEY  (`user`,`domain`)
) ENGINE=MyISAM;
...
     _________________________________________________________

Chapter 2. Developer's Guide

   The module does not provide any API to use in other OpenSER
   modules.
     _________________________________________________________

Chapter 3. Frequently Asked Questions

   3.1. Where can I find more about OpenSER?
   3.2. Where can I post a question about this module?
   3.3. How can I report a bug?

   3.1. Where can I find more about OpenSER?

   Take a look at http://openser.org/.

   3.2. Where can I post a question about this module?

   First at all check if your question was already answered on
   one of our mailing lists:

     * User Mailing List -
       http://openser.org/cgi-bin/mailman/listinfo/users
     * Developer Mailing List -
       http://openser.org/cgi-bin/mailman/listinfo/devel

   E-mails regarding any stable OpenSER release should be sent to
   <users@openser.org> and e-mails regarding development versions
   should be sent to <devel@openser.org>.

   If you want to keep the mail private, send it to
   <team@openser.org>.

   3.3. How can I report a bug?

   Please follow the guidelines provided at:
   http://sourceforge.net/tracker/?group_id=139143.
