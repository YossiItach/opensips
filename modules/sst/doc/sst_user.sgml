<!-- Module User's Guide -->

<chapter>
	<chapterinfo>
	<revhistory>
		<revision>
		<revnumber>$Revision$</revnumber>
		<date>$Date$</date>
		</revision>
	</revhistory>
	</chapterinfo>
	<title>User's Guide</title>
	
	<section>
	<title>Overview</title>

	<para>The sst module provides a way to update the dialog
	expire timer based on the SIP INVITE expire header value. You
	can use the sst module in an OpenSER proxy to allow freeing of
	local resources of dead (expired) calls.</para>

	<para>You can also use the sst module to validate the MIN_SE
	header value and reply to any request with a "422 - Session
	Timer Too Small" if the value is too small for your OpenSER
	configuration.</para>

	</section>
	<section>
	<title>How it works</title>
	
	<para>The sst module uses the dialog module to be notified of
	any new or updated dialogs. It will then look for and extract
	the expire: header value (if there is one) and override the
	dialog expire timer value for the current context dialog by
	setting the avp value.</para>

	<para>All of this happens with a properly configured dialog
	and sst module and setting the dialog flag at the time any
	INVITE sip message is seen. There is no openser.cfg script
	function call required. See the dialog module users guide for
	more information.</para>

	</section>
	<section>
	<title>Dependencies</title>
	<section>
		<title>&ser; Modules</title>
		<para>
		The following modules must be loaded before this module:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>dialog</emphasis> - dialog module and its decencies. (tm)
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before running
		&ser; with this module loaded:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>None</emphasis>.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	</section>
	<section>
	<title>Exported Parameters</title>
	<section>
		<title><varname>enable_stats</varname> (integer)</title>

		<para>If the statistics support should be enabled or
		not. Via statistic variables, the module provide
		information about the dialog processing. Set it to zero to
		disable or to non-zero to enable it.</para>

		<para>
		<emphasis>
			Default value is <quote>1</quote> (enabled).
		</emphasis>
		</para>

		<example>
		<title>Set <varname>enable_stats</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("sst", "enable_stats", 0)
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>min_se</varname> (integer)</title>

		<para>At this time, the min_se parameter is not being
		used. It may be removed in a future release of the sst
		module.</para>

		<para>If the expire value is smaller then the value of
		<emphasis>min_se</emphasis>, then the module will not
		update the dialog expire time to the current expire time
		in the SIP expire header.</para>

		<para>
		<emphasis>
			Default value is <quote>1600</quote> seconds.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>min_se</varname> parameter</title>
		<programlisting format="linespecific">
...
# At this time, this parameter is IGNORED
modparam("sst", "min_se", 1800)
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>timeout_avp</varname> (string)</title>

		<para>This parameter MUST be set to the same value as the
		dialog parameter of the same name. If this parameter is
		NOT set, the sst module will not do anything!</para>

		<para>This is how the sst module knows which avp in the
		dialog module to change with the new expire value.</para>

		<para>
		<emphasis>
			Default value is <quote>NULL!</quote> it is not set by default.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>timeout_avp</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("dialog", "timeout_avp", "$avp(i:10)")
# Set the sst modules timeout_avp to be the same value
modparam("sst", "timeout_avp", "$avp(i:10)")
...
</programlisting>
		</example>
	</section>

	</section>
	<section>
	<title>Exported Functions</title>
	<section>
		<title>
		<function moreinfo="none">sstCheckMin(min_allowed)</function>
		</title>

		<para>Check the current MIN_SE value against the
		min_allowed parameter passed to the function. If the
		MIN_SE header value is less then min_allowed, this
		function will return true. </para>

		<para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
		<listitem>
			<para><emphasis>min_allowed</emphasis> - The value
			to compare the MIN_SE header value to.</para>
		</listitem>
		</itemizedlist>
		<example>
		<title><function>sstCheckMin</function> usage</title>
		<programlisting format="linespecific">

...
# SST support check if uncommented all sst items.
if (method=="INVITE") {
	if (sstCheckMin("1800")) {
		xlog("L_ERR", "422 Session Timer Too Small\n");
		sl_send_reply("422", "Session Timer Too Small");
		exit;
	}
}
...
</programlisting>
		</example>
	</section>
	</section>
	<section>
	<title>Installation & Running</title>
	<para>just load the module and remember to set the timeout_avp value.</para>
	</section>
</chapter>

<!-- Keep this element at the end of the file
Local Variables:
sgml-parent-document: ("sst.sgml" "Book" "chapter")
End:
-->
