
SST Module (SIP Session Timer)

Ron Winacott

   SOMA Networks, Inc.

Edited by

Ron Winacott

   Copyright © 2006 SOMA Networks, Inc.
     _________________________________________________________

   Table of Contents
   1. User's Guide

        1.1. Overview
        1.2. How it works
        1.3. Dependencies

              1.3.1. OpenSER Modules
              1.3.2. External Libraries or Applications

        1.4. Exported Parameters

              1.4.1. enable_stats (integer)
              1.4.2. min_se (integer)
              1.4.3. timeout_avp (string)

        1.5. Exported Functions

              1.5.1. sstCheckMin(min_allowed)

        1.6. Installation & Running

   2. Developer's Guide
   3. Frequently Asked Questions

   List of Examples
   1-1. Set enable_stats parameter
   1-2. Set min_se parameter
   1-3. Set timeout_avp parameter
   1-4. sstCheckMin usage
     _________________________________________________________

Chapter 1. User's Guide

1.1. Overview

   The sst module provides a way to update the dialog expire
   timer based on the SIP INVITE expire header value. You can use
   the sst module in an OpenSER proxy to allow freeing of local
   resources of dead (expired) calls.

   You can also use the sst module to validate the MIN_SE header
   value and reply to any request with a "422 - Session Timer Too
   Small" if the value is too small for your OpenSER
   configuration.
     _________________________________________________________

1.2. How it works

   The sst module uses the dialog module to be notified of any
   new or updated dialogs. It will then look for and extract the
   expire: header value (if there is one) and override the dialog
   expire timer value for the current context dialog by setting
   the avp value.

   All of this happens with a properly configured dialog and sst
   module and setting the dialog flag at the time any INVITE sip
   message is seen. There is no openser.cfg script function call
   required. See the dialog module users guide for more
   information.
     _________________________________________________________

1.3. Dependencies

1.3.1. OpenSER Modules

   The following modules must be loaded before this module:

     * dialog - dialog module and its decencies. (tm)
     _________________________________________________________

1.3.2. External Libraries or Applications

   The following libraries or applications must be installed
   before running OpenSER with this module loaded:

     * None.
     _________________________________________________________

1.4. Exported Parameters

1.4.1. enable_stats (integer)

   If the statistics support should be enabled or not. Via
   statistic variables, the module provide information about the
   dialog processing. Set it to zero to disable or to non-zero to
   enable it.

   Default value is "1" (enabled). 

   Example 1-1. Set enable_stats parameter
...
modparam("sst", "enable_stats", 0)
...
     _________________________________________________________

1.4.2. min_se (integer)

   At this time, the min_se parameter is not being used. It may
   be removed in a future release of the sst module.

   If the expire value is smaller then the value of min_se, then
   the module will not update the dialog expire time to the
   current expire time in the SIP expire header.

   Default value is "1600" seconds. 

   Example 1-2. Set min_se parameter
...
# At this time, this parameter is IGNORED
modparam("sst", "min_se", 1800)
...
     _________________________________________________________

1.4.3. timeout_avp (string)

   This parameter MUST be set to the same value as the dialog
   parameter of the same name. If this parameter is NOT set, the
   sst module will not do anything!

   This is how the sst module knows which avp in the dialog
   module to change with the new expire value.

   Default value is "NULL!" it is not set by default. 

   Example 1-3. Set timeout_avp parameter
...
modparam("dialog", "timeout_avp", "$avp(i:10)")
# Set the sst modules timeout_avp to be the same value
modparam("sst", "timeout_avp", "$avp(i:10)")
...
     _________________________________________________________

1.5. Exported Functions

1.5.1. sstCheckMin(min_allowed)

   Check the current MIN_SE value against the min_allowed
   parameter passed to the function. If the MIN_SE header value
   is less then min_allowed, this function will return true.

   Meaning of the parameters is as follows:

     * min_allowed - The value to compare the MIN_SE header value
       to.

   Example 1-4. sstCheckMin usage
...
# SST support check if uncommented all sst items.
if (method=="INVITE") {
        if (sstCheckMin("1800")) {
                xlog("L_ERR", "422 Session Timer Too Small\n");
                sl_send_reply("422", "Session Timer Too Small");
                exit;
        }
}
...
     _________________________________________________________

1.6. Installation & Running

   just load the module and remember to set the timeout_avp
   value.
     _________________________________________________________

Chapter 2. Developer's Guide

   The module does not provide any API to use in other OpenSER
   modules.
     _________________________________________________________

Chapter 3. Frequently Asked Questions

   3.1. Where can I find more about SIP Session Timer?
   3.2. Where can I find more about OpenSER?
   3.3. Where can I post a question about this module?
   3.4. How can I report a bug?

   3.1. Where can I find more about SIP Session Timer?

   Take a look at The RFC4028. A good source for RFCs is
   http://www.rfc-archive.org/getrfc.php?rfc=4028.

   3.2. Where can I find more about OpenSER?

   Take a look at http://openser.org/.

   3.3. Where can I post a question about this module?

   First at all check if your question was already answered on
   one of our mailing lists:

     * User Mailing List -
       http://openser.org/cgi-bin/mailman/listinfo/users
     * Developer Mailing List -
       http://openser.org/cgi-bin/mailman/listinfo/devel

   E-mails regarding any stable OpenSER release should be sent to
   <users@openser.org> and e-mails regarding development versions
   should be sent to <devel@openser.org>.

   If you want to keep the mail private, send it to
   <team@openser.org>.

   3.4. How can I report a bug?

   Please follow the guidelines provided at:
   http://sourceforge.net/tracker/?group_id=139143.
