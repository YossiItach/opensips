userblacklist Module

Hardy Kahl

   1&1 Internet AG

Edited by

Henning Westerholt

   Copyright © 2008 1&1 Internet AG
     __________________________________________________________

   Table of Contents
   1. User's Guide

        1.1. Overview
        1.2. Dependencies

              1.2.1. OpenSER Modules
              1.2.2. External Libraries or Applications

        1.3. Exported Parameters

              1.3.1. db_url (string)
              1.3.2. db_table (string)
              1.3.3. use_domain (integer)

        1.4. Exported Functions

              1.4.1. check_user_blacklist (string user, string
                      domain)

              1.4.2. check_blacklist (string table)

        1.5. MI Commands

              1.5.1. reload_blacklist

   2. Developer's Guide
   3. Frequently Asked Questions

   List of Examples
   1-1. Set db_url parameter
   1-2. Set db_table parameter
   1-3. Set use_domain parameter
   1-4. check_user_blacklist usage
   1-5. check_blacklist usage
   1-6. reload_blacklists usage
     __________________________________________________________

Chapter 1. User's Guide

1.1. Overview

   The userblacklist module allows OpenSER to handle blacklists on
   a per user basis. This information is stored in a database
   table, which is queried to decide if the number is blacklisted
   or not.

   An additional functionality that this module provides is the
   ability to handle global blacklists. This lists are loaded on
   startup into memory, thus providing a better performance then
   in the userblacklist case. This global lists could also used to
   prevent the blacklisting of important numbers, as whitelisting
   is also supported. This is useful for example to prevent the
   customer from blocking emergency call number or service
   hotlines.

   The module exports two functions, check_blacklist and
   check_user_blacklist for usage in the config file. Furthermore
   its provide a FIFO function to reload the global blacklist
   cache.
     __________________________________________________________

1.2. Dependencies

1.2.1. OpenSER Modules

   The module depends on the following modules (in the other words
   the listed modules must be loaded before this module):

     * database -- Any database module
     __________________________________________________________

1.2.2. External Libraries or Applications

   The following libraries or applications must be installed
   before running OpenSER with this module loaded:

     * none
     __________________________________________________________

1.3. Exported Parameters

1.3.1. db_url (string)

   Url to the database containing the routing data.

   Default value is
   "mysql://openserro:openserro@localhost/openser".

   Example 1-1. Set db_url parameter
...
modparam("userblacklist", "db_url", "dbdriver://username:password@dbhost
/dbname")
...
     __________________________________________________________

1.3.2. db_table (string)

   Name of the table where the user blacklist data is stored.

   Default value is "userblacklist".

   Example 1-2. Set db_table parameter
...
modparam("userblacklist", "db_table", "userblacklist")
...
     __________________________________________________________

1.3.3. use_domain (integer)

   If set to non-zero value, the domain column in the
   userblacklist is used.

   Default value is "0".

   Example 1-3. Set use_domain parameter
...
modparam("userblacklist", "use_domain", 0)
...
     __________________________________________________________

1.4. Exported Functions

1.4.1. check_user_blacklist (string user, string domain)

   Finds the longest prefix that matches the request URI for the
   given user and domain name in the database. If a match is found
   and it is not set to whitelist, false is returned. Otherwise,
   true is returned. Pseudo-variables or AVPs can be used for both
   parameters.

   Example 1-4. check_user_blacklist usage
...
$avp(i:80) = $rU;
# rewrite the R-URI
if (!check_user_blacklist("$avp(i:80)", "$avp(i:82)"))
        sl_send_reply("403", "Forbidden");
        exit;
}
...
     __________________________________________________________

1.4.2. check_blacklist (string table)

   Finds the longest prefix that matches the request URI for the
   given table. If a match is found and it is not set to
   whitelist, false is returned. Otherwise, true is returned.

   Example 1-5. check_blacklist usage
...
if (!check_blacklist("global_blacklist")))
        sl_send_reply("403", "Forbidden");
        exit;
}
...
     __________________________________________________________

1.5. MI Commands

1.5.1. reload_blacklist

   Reload the internal global blacklist cache. This is necessary
   after the database tables for the global blacklist have been
   changed.

   Example 1-6. reload_blacklists usage
...
openserctl fifo reload_blacklist
...
     __________________________________________________________

Chapter 2. Developer's Guide

   The module does not provide any API to use in other OpenSER
   modules.
     __________________________________________________________

Chapter 3. Frequently Asked Questions

   3.1. Where can I find more about OpenSER?
   3.2. Where can I post a question about this module?
   3.3. How can I report a bug?

   3.1. Where can I find more about OpenSER?

   Take a look at http://openser.org/.

   3.2. Where can I post a question about this module?

   First at all check if your question was already answered on one
   of our mailing lists:

     * User Mailing List -
       http://openser.org/cgi-bin/mailman/listinfo/users
     * Developer Mailing List -
       http://openser.org/cgi-bin/mailman/listinfo/devel

   E-mails regarding any stable OpenSER release should be sent to
   <users@openser.org> and e-mails regarding development versions
   should be sent to <devel@openser.org>.

   If you want to keep the mail private, send it to
   <team@openser.org>.

   3.3. How can I report a bug?

   Please follow the guidelines provided at:
   http://sourceforge.net/tracker/?group_id=139143.
